#pragma checksum "E:\NetCore3.1Cursos\EntrevistaDemoBlazor\Solution\Blazor.Client\Shared\PaginationPage.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "79ff5c591621bc37b7657edd24a9b4d97ed77e5f"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Blazor.Client.Shared
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\NetCore3.1Cursos\EntrevistaDemoBlazor\Solution\Blazor.Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\NetCore3.1Cursos\EntrevistaDemoBlazor\Solution\Blazor.Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\NetCore3.1Cursos\EntrevistaDemoBlazor\Solution\Blazor.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\NetCore3.1Cursos\EntrevistaDemoBlazor\Solution\Blazor.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\NetCore3.1Cursos\EntrevistaDemoBlazor\Solution\Blazor.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\NetCore3.1Cursos\EntrevistaDemoBlazor\Solution\Blazor.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\NetCore3.1Cursos\EntrevistaDemoBlazor\Solution\Blazor.Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\NetCore3.1Cursos\EntrevistaDemoBlazor\Solution\Blazor.Client\_Imports.razor"
using Blazor.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\NetCore3.1Cursos\EntrevistaDemoBlazor\Solution\Blazor.Client\_Imports.razor"
using Blazor.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\NetCore3.1Cursos\EntrevistaDemoBlazor\Solution\Blazor.Client\_Imports.razor"
using Blazor.Shared;

#line default
#line hidden
#nullable disable
    public partial class PaginationPage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 14 "E:\NetCore3.1Cursos\EntrevistaDemoBlazor\Solution\Blazor.Client\Shared\PaginationPage.razor"
       
    [Parameter] public int ActualPage { get; set; } = 1;
    [Parameter] public int totalPages { get; set; }
    [Parameter] public int Radio { get; set; } = 3;
    [Parameter] public EventCallback<int> SelectedPage { get; set; }
    List<PagesModel> pages = new List<PagesModel>();

    protected override void OnParametersSet()
    {
        CargarPaginas();
    }

    private async Task InternalSelectedPage(PagesModel page)
    {
        if (page.Page == ActualPage)
        {
            return;
        }

        if (!page.Enabled)
        {
            return;
        }

        ActualPage = page.Page;

        CargarPaginas();

        await SelectedPage.InvokeAsync(page.Page);
    }

    private void CargarPaginas()
    {
        pages = new List<PagesModel>();
        var PreviousPageEnabled = ActualPage != 1;
        var previousPage = (ActualPage == 1) ? 1 : ActualPage - 1;
        pages.Add(new PagesModel(previousPage, PreviousPageEnabled, "Before"));

        for (int i = 1; i <= totalPages; i++)
        {
            if (i >= ActualPage - Radio && i <= ActualPage + Radio)
            {
                pages.Add(new PagesModel(i) { Active = ActualPage == i });
            }
        }

        var NextPageEnabled = ActualPage != totalPages;
        var NextPage = (ActualPage == totalPages) ? totalPages : ActualPage + 1;
        pages.Add(new PagesModel(NextPage, NextPageEnabled, "Next"));
    }

    class PagesModel
    {

        public PagesModel(int page)
            : this(page, true)
        { }

        public PagesModel(int page, bool enabled)
            : this(page, enabled, page.ToString())
        { }

        public PagesModel(int page, bool enabled, string text)
        {
            Page = page;
            Enabled = enabled;
            Text = text;
        }

        public string Text { get; set; }
        public int Page { get; set; }
        public bool Enabled { get; set; } = true;
        public bool Active { get; set; } = false;
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
